# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "hashicorp/precise64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 5601, host: 5601
  #config.vm.network "forwarded_port", guest: 9200, host: 9200
  #config.vm.network "forwarded_port", guest: 9300, host: 9300

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "10.0.1.11"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
    config.vm.provider "vmware_fusion" do |v|
        v.vmx["memsize"] = "1024"
        v.vmx["numvcpus"] = "2"
    end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL

        sudo apt-get update
        sudo apt-get -y install software-properties-common python-software-properties curl

        # install java
        sudo add-apt-repository -y ppa:webupd8team/java
        sudo apt-get update
        echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
        sudo apt-get -y install oracle-java8-installer

        # install elasticsearch
        wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
        sudo apt-get update
        sudo apt-get -y install elasticsearch
        sudo sed -i 's/# network.host: 192.168.0.1/network.host: localhost/' /etc/elasticsearch/elasticsearch.yml
        sudo service elasticsearch restart
        sudo update-rc.d elasticsearch defaults 95 10
        cd /usr/share/elasticsearch
        #bin/plugin install logstash-input-http

        # install kibana
        sudo groupadd -g 999 kibana
        sudo useradd -u 999 -g 999 kibana
        cd ~; wget https://download.elastic.co/kibana/kibana/kibana-4.2.0-linux-x64.tar.gz
        tar xvf kibana-*.tar.gz
        sudo sed -i 's/# server.host: 0.0.0.0/server.host: localhost/' ~/kibana-4*/config/kibana.yml
        sudo mkdir -p /opt/kibana
        sudo cp -R ~/kibana-4*/* /opt/kibana/
        sudo chown -R kibana: /opt/kibana
        cd /etc/init.d && sudo curl -o  kibana https://raw.githubusercontent.com/sbxtien/VagrantProjects/master/vagrant-elk/resources/kibana-4.x-init
        cd /etc/default && sudo curl -o kibana https://raw.githubusercontent.com/sbxtien/VagrantProjects/master/vagrant-elk/resources/kibana-4.x-default
        sudo chmod +x /etc/init.d/kibana
        sudo update-rc.d kibana defaults 96 9
        sudo service kibana start

        # install nginx
        sudo apt-get -y install nginx apache2-utils
        #sudo htpasswd -c /etc/nginx/htpasswd.users kibanaadmin
        sudo rm /etc/nginx/sites-enabled/default
        cd /etc/nginx/sites-available
        sudo curl -o kibana https://raw.githubusercontent.com/sbxtien/VagrantProjects/master/vagrant-elk/resources/nginx-kibana-site
        sudo curl -o elasticsearch https://raw.githubusercontent.com/sbxtien/VagrantProjects/master/vagrant-elk/resources/nginx-elasticsearch-site
        sudo ln -s /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana
        sudo ln -s /etc/nginx/sites-available/elasticsearch /etc/nginx/sites-enabled/elasticsearch
        sudo service nginx restart

        # install logstash
        echo 'deb http://packages.elasticsearch.org/logstash/2.0/debian stable main' | sudo tee /etc/apt/sources.list.d/logstash.list
        sudo apt-get update
        sudo apt-get install logstash
        cd /etc/logstash/conf.d/ && curl -O https://raw.githubusercontent.com/sbxtien/VagrantProjects/master/vagrant-elk/resources/logstash.conf
        sudo service logstash start

    SHELL
end
